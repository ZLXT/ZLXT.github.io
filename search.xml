<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo&amp;Typora&amp;Markdown</title>
      <link href="/2020/04/11/Hexo&amp;Typora&amp;Markdown/"/>
      <url>/2020/04/11/Hexo&amp;Typora&amp;Markdown/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="hexotyporamarkdown"><a class="markdownIt-Anchor" href="#hexotyporamarkdown"></a> Hexo&amp;Typora&amp;Markdown</h1><h2 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> 标题</h2><h1 id="hexo1"><a class="markdownIt-Anchor" href="#hexo1"></a> hexo1</h1><p>​ctrl+1</p><h2 id="hexo-2"><a class="markdownIt-Anchor" href="#hexo-2"></a> hexo 2</h2><p>​ctrl+2</p><h3 id="hexo-3"><a class="markdownIt-Anchor" href="#hexo-3"></a> hexo 3</h3><p>​ctrl+3</p><h4 id="hexo-4"><a class="markdownIt-Anchor" href="#hexo-4"></a> hexo 4</h4><p>​ctrl+4</p><h5 id="hexo-5"><a class="markdownIt-Anchor" href="#hexo-5"></a> hexo 5</h5><p>​ctrl+5</p><h6 id="hexo-6"><a class="markdownIt-Anchor" href="#hexo-6"></a> hexo 6</h6><p>​ctrl+6</p><hr /><h2 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h2><blockquote><p>hexo</p><blockquote><blockquote><p>hexo</p><blockquote><p>hexo</p></blockquote><p>hexo</p></blockquote><p>hexo</p></blockquote><p>hexo</p></blockquote><p>​ctrl+shift+Q</p><hr /><h2 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h2><h3 id="无序列表"><a class="markdownIt-Anchor" href="#无序列表"></a> 无序列表</h3><p>​ctrl+shift+]</p><ul><li><p>无序列表</p></li><li><p>无序列表</p></li><li><ul><li>无序列表</li></ul></li><li><p>无序列表</p></li><li><ul><li><ul><li>无序列表</li></ul></li><li><ul><li>无序列表</li></ul></li></ul></li></ul><h3 id="有序列表"><a class="markdownIt-Anchor" href="#有序列表"></a> 有序列表</h3><p>​ctrl+shift+[</p><ol><li>有序列表</li><li>有序列表<ol><li>有序列表</li><li>有序列表</li></ol></li><li>有序列表</li><li>有序列表</li></ol><h3 id="任务列表"><a class="markdownIt-Anchor" href="#任务列表"></a> 任务列表</h3><ul><li>[ ] 任务列表</li></ul><hr /><h2 id="代码块"><a class="markdownIt-Anchor" href="#代码块"></a> 代码块</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Hexo</span>(<span class="params"></span>) <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">val</span> io = <span class="keyword">new</span> <span class="type">Bundle</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">val</span> counter = <span class="type">Reg</span>(<span class="type">UInt</span>(<span class="number">8</span> bits)) init(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行间代码<code>Hexo()</code>块</p><hr /><h2 id="数学块"><a class="markdownIt-Anchor" href="#数学块"></a> 数学块</h2><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">V</mi><mn>1</mn></msub><mo>×</mo><msub><mi mathvariant="bold">V</mi><mn>2</mn></msub><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold">i</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold">j</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold">k</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>X</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>u</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>u</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>X</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>v</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>v</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6802159999999997em;vertical-align:-1.590108em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.08597em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.6619700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26797em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87397em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-4.08597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.090108em;"><span style="top:-4.250108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">i</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">u</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.590108em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.090108em;"><span style="top:-4.250108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">j</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">u</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.590108em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.090108em;"><span style="top:-4.250108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.590108em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.08597em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.6619700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.26797em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87397em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-4.08597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><hr /><h2 id="表格块"><a class="markdownIt-Anchor" href="#表格块"></a> 表格块</h2><table><thead><tr><th style="text-align:center">居中</th><th style="text-align:left">左对齐</th><th style="text-align:right">右对齐</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:left">3</td><td style="text-align:right">2</td></tr><tr><td style="text-align:center">2</td><td style="text-align:left">2</td><td style="text-align:right">3</td></tr><tr><td style="text-align:center">3</td><td style="text-align:left">1</td><td style="text-align:right">1</td></tr></tbody></table><p>ctrl+T</p><hr /><h2 id="注脚"><a class="markdownIt-Anchor" href="#注脚"></a> 注脚</h2><p>注脚<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>您可以创建这样的脚注<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>.</p><hr /><h2 id="分割线"><a class="markdownIt-Anchor" href="#分割线"></a> 分割线</h2><hr /><p>上下是分割线</p><hr /><h2 id="字体样式"><a class="markdownIt-Anchor" href="#字体样式"></a> 字体样式</h2><p><em>斜体</em>  ctrl+I</p><p><strong>粗体</strong> ctrl+B</p><p><s>删除线</s> alt+shift+5</p><p><u>下划线</u> ctrl+U</p><hr /><h2 id="流程图"><a class="markdownIt-Anchor" href="#流程图"></a> 流程图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pie</span><br><span class="line">title Pie Chart</span><br><span class="line">&quot;dogs&quot;:200</span><br><span class="line">&quot;cat&quot;:100</span><br><span class="line">&quot;pig&quot;:50</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">stateDiagram</span><br><span class="line">[*] --&gt; Still</span><br><span class="line">Still --&gt; [*]</span><br><span class="line">Still --&gt; Moving</span><br><span class="line">Moving --&gt; Still</span><br><span class="line">Moving --&gt; Crash</span><br><span class="line">Crash --&gt; [*]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">Animal &lt;|-- Duck</span><br><span class="line">    Animal &lt;|-- Fish</span><br><span class="line">    Animal &lt;|-- Zebra</span><br><span class="line">    Animal : +int age</span><br><span class="line">    Animal : +String gender</span><br><span class="line">    Animal: +isMammal()</span><br><span class="line">    Animal: +mate()</span><br><span class="line">    class Duck&#123;</span><br><span class="line">        +String beakColor</span><br><span class="line">        +swim()</span><br><span class="line">        +quack()</span><br><span class="line">    &#125;</span><br><span class="line">    class Fish&#123;</span><br><span class="line">        -int sizeInFeet</span><br><span class="line">        -canEat()</span><br><span class="line">    &#125;</span><br><span class="line">    class Zebra&#123;</span><br><span class="line">        +bool is_wild</span><br><span class="line">        +run()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: Start</span><br><span class="line">op&#x3D;&gt;operation: Your Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><hr /><p>​流程图有点难，也不经常用，就不看了。</p><hr /><h2 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h2><p><a href="https://zlxt.gitee.io" target="_blank" rel="noopener">ZLXT</a>   ctrl+K</p><hr /><h2 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h2><img src="/2020/04/11/Hexo&Typora&Markdown/logo.png" class="" title="图片"><p>ctrl+shift+I</p><hr /><h2 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h2><p>源码模式：ctrl+/<br />选中一整行：ctrl+L<br />选中单词：ctrl+D<br />选中相同格式的文字：ctrl+E<br />跳转到文章开头：ctrl+Home<br />跳转到文章结尾：ctrl+End</p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>注脚 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>写点啥呢？ <em>写点斜体的</em> 或者 <strong>粗体的</strong>. <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Make a midi keyboard(StyloCard)</title>
      <link href="/2019/04/06/Make-a-midi-keyboard-StyloCard/"/>
      <url>/2019/04/06/Make-a-midi-keyboard-StyloCard/</url>
      
        <content type="html"><![CDATA[<h1 id="center仿制stylocard-midi键盘center"><a class="markdownIt-Anchor" href="#center仿制stylocard-midi键盘center"></a> <center><strong>仿制StyloCard midi键盘</strong></center></h1><p>  最近在油管上看到这个效果惊艳的<a href="https://www.bilibili.com/video/av48449557" target="_blank" rel="noopener">StyloCard键盘</a>，简洁但不简单，极少的元件实现超棒的效果（其实是因为没钱买电子元件），于是决定仿制一个玩玩。</p><p>  硬件方面十分简单，通过电阻的串联使每个按键都带有不同的电位，再用带有ADC的引脚读取即可识别按键下的按键。</p><img src="/2019/04/06/Make-a-midi-keyboard-StyloCard/PCB.PNG" class="" title="PCB"><h3 id="centerpcb板center"><a class="markdownIt-Anchor" href="#centerpcb板center"></a> <center><strong>PCB板</strong></center></h3><img src="/2019/04/06/Make-a-midi-keyboard-StyloCard/%E6%88%90%E5%93%81.PNG" class="" title="成品"><h3 id="center成品右边笔的焊盘因为用的次数多了导致表面铜脱落了center"><a class="markdownIt-Anchor" href="#center成品右边笔的焊盘因为用的次数多了导致表面铜脱落了center"></a> <center><strong>成品（右边笔的焊盘因为用的次数多了，导致表面铜脱落了）</strong></center></h3><p>  难点在于用软件使Attiny85模拟成为USB设备（基于<a href="https://www.obdev.at/products/vusb/index.html" target="_blank" rel="noopener">V-USB</a>），以及实现midi设备的通讯协议。因为Attiny85可以使用Arduino来遍程，因此有极其丰富的库来进行调用。</p><hr /><h4 id="center画知识点v-usbmidi协议center"><a class="markdownIt-Anchor" href="#center画知识点v-usbmidi协议center"></a> <center><strong>画知识点：V-USB，MIDI协议</strong></center></h4><hr /><hr /><h2 id="centerv-usbcenter"><a class="markdownIt-Anchor" href="#centerv-usbcenter"></a> <center><strong>V-USB</strong></center></h2><p>  我在Github找到了两个针对Attiny85的，可用的库分别是<a href="https://github.com/BlokasLabs/USBMIDI" target="_blank" rel="noopener">USBMIDI</a>和<a href="https://github.com/heartscrytech/DigisparkMIDI" target="_blank" rel="noopener">DigisparkMIDI</a>。两个库都是基于V-USB来实现的。为了偷懒，我选择使用DigisparkMIDI（我买的小板子是国产的Digispark）。</p><pre><code>#include &lt;DigiMIDI.h&gt;//去掉Debug后的示例DigiMIDIDevice midi;void setup() {}void loop() {  midi.update(); //进行更新  midi.delay(500);//延时  midi.sendNoteOn(62,32);//发送按键按下的信息}</code></pre><p>  示例里大部分都是Debug用的测试代码，有控制效果的只有几行。</p><hr /><pre><code> void  sendNoteOn(int key, int velocity=0, uchar channel=1) {send(NoteOn,key,velocity,channel);}void  sendNoteOff(int key, int velocity=0, uchar channel=1) {send(NoteOff,key,velocity,channel);}void  sendProgramChange(int inProgramNumber, uchar channel=1) {send(ProgramChange,inProgramNumber,0,channel);}void  sendControlChange(int inControlNumber, int inControlValue=0, uchar channel=1) {send(ControlChange,inControlNumber,inControlValue,channel);}void  sendPolyPressure(int inNoteNumber, int inPressure, uchar channel=1) {send(AfterTouchPoly,inNoteNumber,inPressure,channel);}void  sendAfterTouch(int inPressure, uchar channel=1) {send(AfterTouchChannel, inPressure, 0, channel);}void  sendPitchBend(int inPitchValue, uchar channel=1) {const  unsigned bend = inPitchValue -  0;/*MIDI_PITCHBEND_MIN;*/send(PitchBend, (bend &amp;  0x7f), (bend &gt;&gt;  7) &amp;  0x7f, channel);}void  sendPitchBend(double inPitchValue, uchar channel=1) {const  int value = inPitchValue;// * MIDI_PITCHBEND_MAX;sendPitchBend(value, channel);}</code></pre><p>   以上是封装好的可以直接使用的函数，具体作用可以看下边MIDI协议的讲解。</p><hr /><pre><code>#include &lt;DigiMIDI.h&gt;DigiMIDIDevice midi;void setup() {  pinMode(2, INPUT);//设置带有ADC的引脚为输入}void loop() {  midi.update();  midi.delay(100);//延时1ms  int n = analogRead(1);//读取引脚的电压值  if (n &gt; 400 &amp;&amp; n &lt;= 550 )//判断是否按下  {    midi.sendNoteOn(69, 255); //按下按键    midi.delay(100);    midi.sendNoteOff(69, 255);//松开按键  }</code></pre><p>  这是我代码中的一部分，其余部分原理一样，就不再进行赘述。</p><hr /><p>   **重点是对V-USB的理解。**这里做简单介绍，详细可以去官网或者下文的引用博客中学习。<br />   首先要对USB协议有一定的了解，可以看下《圈圈教你玩USB》（书中的实例是基于51加一款USB芯片完成的）中关于USB协议的部分。<br />  AVRUSB针对AVR单片机，实现使用单片机的IO口来模拟USB的通信端口，由软件来实现USB通信协议，将普通的AVR单片机模拟成一个USB低速设备，从而实现AVR单片机与计算机之间的通信和控制。缺点是：只能模拟USB1.1协议，且模拟占用了十分多的CPU资源，过于复杂的项目不建议使用。<br />  硬件上需要单片机具有至少2 kB闪存，128字节RAM和至少12 MHz时钟速率（可以使用12 MHz，15 MHz，16 MHz 18 MHz或20 MHz晶振或12.8 MHz或16.5 MHz内部RC振荡器）。</p><hr /><p>  V-USB代码文件有：</p><ul><li>usbconfig.h   用户配置文件</li><li>iarcompat.h   为兼容IAR编译器而定义的宏</li><li>usbdrv.h   usb驱动接口文件的头文件</li><li>usbdrv.c   usb驱动接口文件</li><li>usbdrvasm.asm   为兼容IAR编译器而使用的底层接口函数文件的别名</li><li>usbdrvasm.S   汇编语言编写的底层接口函数</li><li>oddebug.h   调试用函数的头文件（不使用调试功能时可以不添加）</li><li>oddebug.c   包含调试用的函数（不使用调试功能时可以不添加）</li></ul><hr /><h3 id="其中用户需要注意的有文件是usbconfigh和usbdrvc"><a class="markdownIt-Anchor" href="#其中用户需要注意的有文件是usbconfigh和usbdrvc"></a>   其中用户需要注意的有文件是usbconfig.h和usbdrv.c。</h3><p>  通过对usbconfig.h可以改变的设置有：</p><ul><li>USB_CFG_IOPORTNAME</li></ul><ul><li>定义USB数据线使用的端口。只要是通用的IO都可以，没有特殊的要求。</li></ul><ul><li>USB_CFG_DMINUS_BIT</li></ul><ul><li>USB数据线D-使用的引脚。</li></ul><ul><li>USB_CFG_DPLUS_BIT<br /> - USB数据线D+使用的引脚。因为D+要求同时连接到INT0上，所以一般情况下需要使用3个IO口。如果D+使用的引脚就是INT0，那么可以少使用一 个IO端口。</li><li>USB_CFG_VENDOR_ID</li></ul><ul><li>设备生产商的ID号</li></ul><ul><li>USB_CFG_DEVICE_ID</li></ul><ul><li>设备的产品ID号。这两个参数就是Windows识别USB设备的主要参数。需要注意的是，这两个参数都是低字节在前，高字节在后。</li></ul><ul><li>USB_CFG_DEVICE_VERSION</li></ul><ul><li>设备的版本号次版本号在前，主版本号在后。在Windows的设备管理中可以看到这个版本号</li></ul><ul><li>USB_CFG_VENDOR_NAME</li></ul><ul><li>设备生产商的名称，它在Windows的设备管理中可以看到。这里一般写入的是网址。</li></ul><ul><li>USB_CFG_VENDOR_NAME_LEN</li></ul><ul><li>设备生产商名称的长度。</li></ul><ul><li>USB_CFG_DEVICE_NAME</li></ul><ul><li>设备的名称，它在Windows的设备管理中可以看到。设备名称和生产商的名称都是以字符的方式定义的，它们目前不支持中文。</li></ul><ul><li>USB_CFG_DEVICE_NAME_LEN</li></ul><ul><li>设备名称的长度。</li></ul><hr /><h3 id="usbdrvc中是封装好的功能函数有"><a class="markdownIt-Anchor" href="#usbdrvc中是封装好的功能函数有"></a>   usbdrv.c中是封装好的功能函数有：</h3><ul><li>usbInit(void);</li></ul><ul><li>初始化函数</li></ul><ul><li>usbPoll(void);</li></ul><ul><li>USB事件处理函数，需要在主循环中进行调用</li></ul><ul><li>usbFunctionSetup(uchar data[8]);</li></ul><ul><li>一般功能设置</li></ul><ul><li>usbSetInterrupt(uchar *data, uchar len);</li></ul><ul><li>此函数设置将在下一次中断IN传输期间发送的消息。</li></ul><ul><li>usbFunctionRead(uchar *data, uchar len);</li></ul><ul><li>主机从单片机中读取数据</li></ul><ul><li>usbFunctionWrite(uchar *data, uchar len);</li></ul><ul><li>主机向单片机写入数据</li></ul><p>  以上函数是常用功能，还有其它函数在文件中也有较多注释（没用过，也不太懂，就不乱讲了）。</p><hr /><hr /><h2 id="centermidi协议center"><a class="markdownIt-Anchor" href="#centermidi协议center"></a> <center><strong>MIDI协议</strong></center></h2><p>  由于MIDI协议中涉及较多与项目无关的控制，就不再依次进行介绍，捡重点部分进行说明。<br />  我们对键盘的控制，就是通过USB向电脑上的软件发送MIDI音轨的信息，如同直接操作软件上的音轨。换句话来讲就是当你在MIDI键盘上按下一个琴键，你不是在制造一个声音而是发出一条MIDI指令。发送信息的种类有：时间差（delta-time），MIDI事件（ MIDI events），非MIDI事件（ Non-MIDI events）和系统码事件（sysex event）。</p><hr /><h3 id="center时间差center"><a class="markdownIt-Anchor" href="#center时间差center"></a> <center><strong>时间差</strong></center></h3><p>  时间差是可变常量（variable length quantity），表示的是将要发生的事件与前一事件之间的时间差值。两个事件同时发生，时间差设为零。</p><hr /><h3 id="center非midi事件和系统码事件center"><a class="markdownIt-Anchor" href="#center非midi事件和系统码事件center"></a> <center><strong>非MIDI事件和系统码事件</strong></center></h3><p>  这两种事件中包含了MIDI文件中的非MIDI信息。有版权信息，乐器名称，设备名称，音源设备编号等等。与实现键盘演奏关系不大，就不再进行赘述。</p><hr /><h3 id="centermidi事件center"><a class="markdownIt-Anchor" href="#centermidi事件center"></a> <center><strong>MIDI事件</strong></center></h3><p>  MIDI事件有音符事件、控制器事件和系统信息事件等。命令的格式一般为：时间差+指令种类+参数（包含音调和力度）组成。</p><img src="/2019/04/06/Make-a-midi-keyboard-StyloCard/%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB.PNG" class="" title="命令分类"><h3 id="center命令列表markdown的表格无法渲染只能用图片了center"><a class="markdownIt-Anchor" href="#center命令列表markdown的表格无法渲染只能用图片了center"></a> <center><strong>命令列表（Markdown的表格无法渲染，只能用图片了）</strong></center></h3><p>  MIDI音符的有效范围是0-127，16进制是00-7FH，对映软件上的127个按键，由小到大依次对应音符。<br />  音符的力度，也称为按键的速度，范围是1-127，也即01-FF，当按下或松开音符的力度为0时，表示松开音符。</p><hr /><h4 id="按下音符noteon"><a class="markdownIt-Anchor" href="#按下音符noteon"></a> 按下音符（noteon）</h4><p>  例如命令：按下中音A 为00 96 45 70。其中00为时间差，96为命令类型和通道选择（这里是第7个通道），45为音符，70为力度（上面的命令为16进制）。</p><h4 id="松开音符noteoff"><a class="markdownIt-Anchor" href="#松开音符noteoff"></a> 松开音符（noteoff）</h4><p>  命令：松开中音A 为00 86 45 70。同上，只有命令类型改变了。</p><h4 id="滑音pitch-wheel"><a class="markdownIt-Anchor" href="#滑音pitch-wheel"></a> 滑音（Pitch Wheel）</h4><p>  用不同的滑音参数调整MIDI器件来改变音符的值，同时对于不同的MIDI器件的通道，滑音的信息是不同的。00 E6 00 40。其中 00时间差，E6表示滑音，在第7通道使用滑音，设置滑音值为0，代入公式：参数是0-（-8192）=8192，8192的7位双字节表示成8192 mod 128=00H（字节的最高位设置为0），8192 div 128=128*64=40H（字节的最高位设置为0）。</p><h4 id="其它的都没用过就不进行讲解了"><a class="markdownIt-Anchor" href="#其它的都没用过就不进行讲解了"></a> 其它的都没用过就不进行讲解了。</h4><img src="/2019/04/06/Make-a-midi-keyboard-StyloCard/%E6%BA%90%E7%A0%81.PNG" class="" title="源码"><p>  这是在MIDI库的源码中，对于命令的实现，其中的命令类型已经事先定义好了。</p><img src="/2019/04/06/Make-a-midi-keyboard-StyloCard/send.PNG" class="" title="send"><h3 id="center其中send函数的实现center"><a class="markdownIt-Anchor" href="#center其中send函数的实现center"></a> <center><strong>其中send函数的实现</strong></center></h3><p>  因为库的作者也是修改别人的库，所以其中标What is this？的参数实际上是时间差。send函数使用的是usbSetInterrupt(uchar *data, uchar len);函数进行的数据发送，正好可以一次性发送完整个命令，不用分成多次进行传输。</p><hr /><hr /><h2 id="center后记center"><a class="markdownIt-Anchor" href="#center后记center"></a> <center><strong>后记</strong></center></h2><p>  因为对音乐，乐理什么的一窍不通，所以一些高级的应用完全没有头绪，滑音也没能实现。虽然项目实现的不太好，但是找到了V-USB这个方便的库，对于一些便宜的芯片来说十分好用。而且Attiny还可以很方便得实现微型游戏机，等闲了可以搞一个出来。关于MIDI协议和V-USB更详细得内容可以查看参考文献和官方示例。</p><hr /><h2 id="center更新center"><a class="markdownIt-Anchor" href="#center更新center"></a> <center><strong>更新</strong></center></h2><p>  趁着PCB制作厂商推出价格优惠制板了，成品看起来还是不错的。</p><img src="/2019/04/06/Make-a-midi-keyboard-StyloCard/%E5%B7%A5%E5%8E%82%E6%88%90%E5%93%81.PNG" class="" title="工厂成品"><hr /><p>参考:<br />1.AVR-USB(<a href="http://lionwq.spaces.eepw.com.cn/articles/categorys/category/1824" target="_blank" rel="noopener">http://lionwq.spaces.eepw.com.cn/articles/categorys/category/1824</a>)<br />2.MIDI协议（<a href="https://blog.csdn.net/shao941122/article/details/46124865%EF%BC%89" target="_blank" rel="noopener">https://blog.csdn.net/shao941122/article/details/46124865）</a></p>]]></content>
      
      
      <categories>
          
          <category> Attiny85 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>My Z80 computer design</title>
      <link href="/2019/01/12/My-Z80-computer-design/"/>
      <url>/2019/01/12/My-Z80-computer-design/</url>
      
        <content type="html"><![CDATA[<h1 id="centerz80电脑总设计蓝图center"><a class="markdownIt-Anchor" href="#centerz80电脑总设计蓝图center"></a> <center><strong>Z80电脑总设计蓝图</strong></center></h1><p>  大学四年接近尾声，三年学了许多与专业无关的方面，反倒是本专业的东西什么都没学会，这个项目算是我总结三年来所学的成果。<br />  项目使用<a href="https://en.wikipedia.org/wiki/Zilog_Z80" target="_blank" rel="noopener">Z80</a>作为CPU，这是国内现在最容易买到，还便宜的8bit时代处理器。性能在那个时代也是比较强的。<a href="https://en.wikipedia.org/wiki/MOS_Technology_6502" target="_blank" rel="noopener">6502</a>虽然也不错，但比较难买到，而且还比较贵。最新的Z80型号中有20MHz的，与当时普遍的4MHz来比较，可以说是相当的快了。<br />  设计参照<a href="https://dekunukem.wordpress.com/category/fap-z80-computer/" target="_blank" rel="noopener">FAP Z80 Computer</a>，此项目中有许多可学之处，有兴趣可以去看看。与FAP Z80 Computer不同，我将总体设计分为：底部总线板，控制板，CPU板，内存板，显卡及声卡板，I/O板。其中有相同之处也有不同之处，我会在下边详细说明。</p><p>  大体上的设计在于重视系统的灵活性。因为各模块使用了比较贵的控制芯片，所以在实现本身功能的同时，尽量将模块设计成单独的系统，以后还可以作为开发板来使用。</p><hr /><h2 id="center底部总线板center"><a class="markdownIt-Anchor" href="#center底部总线板center"></a> <center><strong>底部总线板</strong></center></h2><p>  底部总线板用于各板之间的信号连接，采用双排40Pin的排插组成，每个模块都有80条线路。40条已经安排使用了，用于Z80所有的引脚引出。剩下40条用来作为备用的功能扩展使用。</p><hr /><h2 id="center控制板center"><a class="markdownIt-Anchor" href="#center控制板center"></a> <center><strong>控制板</strong></center></h2><p>  控制板由STM32F407作为控制器，加上2.2寸显示屏和少量按键组成。采用高性能的F4系列是为了更好的监控和控制Z80的运行。基础功能：三总线数据的监视，运行的控制，EEPROM的读写。较高的性能可以实现指令的解析，作为与电脑进行通信的从机，在电脑上实现上位软件来控制F4进而控制Z80，实现比较复杂的功能。</p><hr /><h2 id="centercpu板center"><a class="markdownIt-Anchor" href="#centercpu板center"></a> <center><strong>CPU板</strong></center></h2><p>  CPU板主要是将Z80的所有引脚进行引出到总线上。通过双端芯片进行缓冲，提高引脚的驱动能力。</p><hr /><h2 id="center内存板center"><a class="markdownIt-Anchor" href="#center内存板center"></a> <center><strong>内存板</strong></center></h2><p>  内存板由ROM和RAM组成。Z80的地址总线为16位，可寻址一共64K的内存空间。其中ROM的大小暂时定为32K,位于0X0000到0X7FFF，用于以后对系统的引导。RAM的具体大小还未定下，计划是通过分页机制来实现大于64K空间限制的寻址，每个分页定为16K。</p><hr /><h2 id="center显卡及声卡板center"><a class="markdownIt-Anchor" href="#center显卡及声卡板center"></a> <center><strong>显卡及声卡板</strong></center></h2><p>  显卡和声卡板由FPGA实现。显卡部分有VGA接口，如果有可能还会加入HDMI接口。主要功能是实现彩色的文本模式显示。256个（1字节）可选的文本块。每个文本块的像素都可以独立编辑色彩。实现类似Gamboy的PPU功能。声卡部分参考Github上的一个项目，暂时还没有研究。</p><hr /><h2 id="centerio板center"><a class="markdownIt-Anchor" href="#centerio板center"></a> <center><strong>I/O板</strong></center></h2><p>  I/O板部分实现与外设的通信。提供USB接口，ESP-01接口，SD卡接口等。I/O卡最后设计，前边的工程量就很大了，等做完前边的工作再详细思考这个的设计方案。</p>]]></content>
      
      
      <categories>
          
          <category> Z80 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>My Website Collection</title>
      <link href="/2018/12/09/My-Website-Collection/"/>
      <url>/2018/12/09/My-Website-Collection/</url>
      
        <content type="html"><![CDATA[<h1 id="center收藏的网站和项目center"><a class="markdownIt-Anchor" href="#center收藏的网站和项目center"></a> <center><strong>收藏的网站和项目</strong></center></h1><h2 id="自制电脑"><a class="markdownIt-Anchor" href="#自制电脑"></a> 自制电脑</h2><h3 id="z80"><a class="markdownIt-Anchor" href="#z80"></a> Z80</h3><ol><li><a href="https://dekunukem.wordpress.com/category/fap-z80-computer/" target="_blank" rel="noopener">FAP Z80 Computer</a>( 这是我最看好的项目 )</li><li><a href="https://rc2014.co.uk/" target="_blank" rel="noopener">RC2014</a>(这是我第二看好的项目)</li><li><a href="https://www.retrobrewcomputers.org/doku.php?id=boards:sbc:zetav2:start" target="_blank" rel="noopener"> Zeta SBC V2</a>(这是我第三看好的项目)</li><li><a href="http://z80.info/index.htm#GENERAL" target="_blank" rel="noopener">Z80_Web</a></li></ol><hr /><h3 id="logisim"><a class="markdownIt-Anchor" href="#logisim"></a> Logisim</h3><ol><li><a href="https://lianera.github.io/post/2014/cpu-step-by-step/" target="_blank" rel="noopener">简单CPU设计实践</a></li></ol><hr /><h3 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它</h3><ol><li><a href="http://www.dos4ever.com/8031board/8031board.html#introduction" target="_blank" rel="noopener">A Tiny 80©32 BASIC Board</a></li><li><a href="http://www.technoblogy.com/show?1GX1" target="_blank" rel="noopener">Tiny Lisp Computer</a></li><li><a href="http://www.6502.org/" target="_blank" rel="noopener">6502_Web</a></li></ol><hr /><h2 id="网站"><a class="markdownIt-Anchor" href="#网站"></a> 网站</h2><h3 id="fpga"><a class="markdownIt-Anchor" href="#fpga"></a> FPGA</h3><p>1.<a href="https://www.fpga4fun.com/" target="_blank" rel="noopener">FPGA4Fun</a><br />2.<a href="http://sword.org.cn/" target="_blank" rel="noopener">Sword平台</a></p><hr /><h3 id="电子制作和项目"><a class="markdownIt-Anchor" href="#电子制作和项目"></a> 电子制作和项目</h3><ol><li><a href="https://hackaday.io/" target="_blank" rel="noopener">Hackaday</a></li><li><a href="https://www.instructables.com/" target="_blank" rel="noopener">instructables</a></li><li><a href="https://maker.pro/" target="_blank" rel="noopener">Maker Pro</a></li></ol><hr /><h3 id="计算机"><a class="markdownIt-Anchor" href="#计算机"></a> 计算机</h3><ol><li><a href="http://www.computerhistory.org/" target="_blank" rel="noopener">Computer History Museum</a></li></ol><hr /><h3 id="3d-printer"><a class="markdownIt-Anchor" href="#3d-printer"></a> 3D Printer</h3><ol><li><a href="https://www.thingiverse.com/" target="_blank" rel="noopener">Thingiverse</a></li></ol><hr /><h3 id="其它-2"><a class="markdownIt-Anchor" href="#其它-2"></a> 其它</h3><ol><li><a href="http://pinouts.ru/" target="_blank" rel="noopener">计算机接口协议</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用STM32CubeMX_import_project时BUG解决方法</title>
      <link href="/2018/12/07/STM32CubeMX-import-bug/"/>
      <url>/2018/12/07/STM32CubeMX-import-bug/</url>
      
        <content type="html"><![CDATA[<p>  最近看见别人的项目中有用到STM32的，然而自己这么长时间也没学过什么控制器，于是决定学一手STM32。现在比较主流的还是利用标准库进行程序的开发，但未来的发展趋势却是利用STM32CubeMX和HAL库进行开发。好处是可以在STM32的平台上各芯片之间进行任意的代码移植，不用像移植标准库一样欲仙欲死。花了三天入个门，学会了控制GPIO，之后准备实践不同芯片间程序移植这个最优越的特性。<br />  通过使用import project可以从原来的工程生成新的工程，可以用于代码在不同芯片间的移植。</p><hr /><h2 id="使用时出现的bug"><a class="markdownIt-Anchor" href="#使用时出现的bug"></a> <strong>使用时出现的BUG</strong></h2><p>  import project后其他的选项一切正常，唯独Mcu Reference这个选项没有变，还是原来的芯片，且无法进行更改。</p><p><img src="103_full.PNG" alt="原来的工程" /></p><h3 id="f103的旧工程"><a class="markdownIt-Anchor" href="#f103的旧工程"></a> <strong>F103的旧工程</strong></h3><hr /><p><img src="407_no_change.PNG" alt="新的工程" /></p><h3 id="f407的新工程出现的问题"><a class="markdownIt-Anchor" href="#f407的新工程出现的问题"></a> <strong>F407的新工程出现的问题</strong></h3><hr /><p><img src="407_no_change_keil.PNG" alt="生成的keil工程" /></p><h3 id="综合后生成keil工程出现的问题"><a class="markdownIt-Anchor" href="#综合后生成keil工程出现的问题"></a> <strong>综合后，生成keil工程出现的问题</strong></h3><hr /><h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> <strong>解决方案</strong></h2><p>  将import project后的工程保存后直接关闭，不进行综合。之后用文本编辑器直接打开新生成的<code>.ioc</code>工程文件。在文件中找到<code>ProjectManager.DevicId=</code>将其后的芯片的值修改为现在所用的芯片型号，保存关闭即可。</p><p><img src="407_no_change_code.PNG" alt="生成的keil工程" /></p><h3 id="工程文件要修改的地方"><a class="markdownIt-Anchor" href="#工程文件要修改的地方"></a> <strong>工程文件要修改的地方</strong></h3><hr /><p><img src="407_change_code.PNG" alt="生成的keil工程" /></p><h3 id="工程文件要修改后"><a class="markdownIt-Anchor" href="#工程文件要修改后"></a> <strong>工程文件要修改后</strong></h3><hr /><p><img src="407_change.PNG" alt="生成的keil工程" /></p><h3 id="修改后的工程"><a class="markdownIt-Anchor" href="#修改后的工程"></a> <strong>修改后的工程</strong></h3><hr /><p><img src="407_change_keil.PNG" alt="生成的keil工程" /></p><h3 id="修改后生成的keil工程"><a class="markdownIt-Anchor" href="#修改后生成的keil工程"></a> <strong>修改后生成的Keil工程</strong></h3><hr /><h3 id="stmcubemx在进行工程移植后先前的用户代码不会和keil工程一起生成需要重新编写-hal库的兼容性比较强可以在编写程序时将用户的程序和stmcubemx自动生成的代码进行分开只在main函数中对用户代码进行调用来方便以后工程移植到其它芯片上"><a class="markdownIt-Anchor" href="#stmcubemx在进行工程移植后先前的用户代码不会和keil工程一起生成需要重新编写-hal库的兼容性比较强可以在编写程序时将用户的程序和stmcubemx自动生成的代码进行分开只在main函数中对用户代码进行调用来方便以后工程移植到其它芯片上"></a> <strong>  STMCubeMX在进行工程移植后，先前的用户代码不会和Keil工程一起生成，需要重新编写。Hal库的兼容性比较强，可以在编写程序时将用户的程序和STMCubeMX自动生成的代码进行分开，只在MAIN函数中对用户代码进行调用，来方便以后工程移植到其它芯片上。</strong></h3>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
